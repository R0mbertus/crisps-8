#ifndef CHIP_8_DEFINITIONS_H
#define CHIP_8_DEFINITIONS_H

#include <cstdint>

using BYTE = uint8_t;
using SHORT = uint16_t;
using WORD = uint32_t;

namespace defaults {
    constexpr const BYTE    screen_height = 64;
    constexpr const BYTE    screen_width = 32;
    constexpr const BYTE    small_size = 0x10;
    constexpr const SHORT   rom_start = 0x200;
    constexpr const SHORT   fontset_size = 0x50;
    constexpr const WORD    screen_size = screen_height * screen_width;
    constexpr const WORD    memory_size = 0x1000;
    constexpr const int     scale = 8;

    constexpr const std::array<BYTE, defaults::fontset_size> fontset = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };
}

#endif
